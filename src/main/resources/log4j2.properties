# *) In Eclipse: Run - Run... - In the navigation bar on the left select either the 
# server, or the runnable class, or the JUnit test you want to log with log4j -
# select the Classpath tab - User Entries - Advanced... - Add folders - OK - select 
# the "log4j" folder under the src folder - OK   
# *) Repeat last step for other servers, runnable classes or JUnit tests you want to log
# Level DEBUG - The DEBUG Level designates fine-grained informational events that are most useful to debug an application. 
# Level INFO - The INFO level designates informational messages that highlight the progress of the application at coarse-grained level. 
# Level WARN - The WARN level designates potentially harmful situations.
# Level ERROR - The ERROR level designates error events that might still allow the application to continue running.
# Level FATAL - The FATAL level designates very severe error events that will presumably lead the application to abort. 
name=PropertiesConfig
appenders = console, file

appender.console.type = Console
appender.console.name = STDOUT
appender.console.layout.type = PatternLayout
appender.console.layout.pattern = [%d{dd MMM yyyy HH:MM:ss}] %p - "%m" - (%F:%L) %n

appender.file.type = File
appender.file.name = LOGFILE
appender.file.fileName=log4j.log
appender.file.layout.type=PatternLayout
appender.file.layout.pattern=[%d{dd MMM yyyy HH:MM:ss}] %p - "%m" - (%F:%L) %n

loggers=file
logger.file.name=com.kaltura
logger.file.level = error
logger.file.appenderRefs = file
logger.file.appenderRef.file.ref = LOGFILE

rootLogger.level = debug
rootLogger.appenderRefs = stdout
rootLogger.appenderRef.stdout.ref = STDOUT
